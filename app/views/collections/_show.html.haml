- collection = show
/head start
.head
  %span.left
    = container_text( collection ).capitalize + ": " + collection.title
    - if current_user and current_user.has_role?(  [ :admin, :cataloger ] )
      .featured
        - form_for collection, :html => { :id => nil } do |form|
          = form.check_box :featured, :id => gen_id
          - if !collection.featured?
            %label.is_featured
              Feature this collection
          - else
            %label.is_featured
              Featured
              = feature_rank( collection )
    - else
      - if collection.featured?
        %label.is_featured>FEATURED
  %span.right.rss
    %img{ :src => "/images/icon-rss.gif", :alt => "rss" }
    %a{ :href => "#" }
      Subscribe to this
      = container_text( collection ).capitalize
/head end
.body
  .col-main.left
    /collection single start
    .collection-single
      .image{ :style => "background-color:#333" }
      .details
        -# TODO title part -- only show if Playlist type of collection
        -#%h5.title
          -#%span
            -#created by
            -#%strong
              -#= h collection.user.login
        %p
          %strong
            Videos:
          = collection.size( public_only? )
          %br
          %strong
            Views:
          = collection.views
          %br
          %strong
            Added:
          = collection.created_at.to_date.to_s(:medium)
          %br
          %strong
            Last Updated:
          = collection.created_at.to_date.to_s(:medium)
        %p
          = h collection.description
        - if current_user and current_user.id == collection.user_id
          %p
            This playlist is
            = collection.public? ? "public." : "private."

        - if current_user and current_user.id == collection.user_id
          %p
            = link_to "Edit " + container_text( collection ).capitalize, edit_collection_path( collection )
            \|
            = link_to "Delete " + container_text( collection ).capitalize, collection_path( collection ), |
               :method => :delete, |
               :confirm => "are you sure you want to delete this collection?" |
      /collection single end
    = render :partial => "videos/index", :object => bookmarks
    /col left end
    /code below would be better in collections/show but HAML nesting wont work there?
  .col-right
    %dl
      %dt
        %img{ :src => "/images/icon-video.gif", :alt => "video" }
        MORE COLLECTIONS
      %dd
        %ul
          %li
            = link_to "Browse All #{containers_text( @collection ).capitalize} Â»", |
              send( "#{containers_text( @collection )}_collections_path".to_sym ) |
          /
            - if owner = owner_text( @collection )
              %li
                All
                = owner
                = containers_text( @collection )
          /
            %li
              Related
              = containers_text( @collection )