- video ||= @video
.one-column
  .head
    %span.left{:class=>video_vis_class(video)}
      = h video.title

    - if current_user and current_user.has_role?(  [ :admin, :cataloger ] )
      .featured.clear
        - form_for video, :html => { :id => nil } do |form|
          = form.check_box :featured
          - if !video.featured?
            %label.is_featured
              Feature this video
          - else
            %label.is_featured
              This video featured on
              = video.featured_on.to_time.localtime.strftime("%B %d, %Y")
              = feature_rank( video )
    - else
      - if video.featured?
        %label.is_featured>FEATURED

    - if current_user and current_user.has_role?( :admin )
      .public.clear
        - form_for video, :html => { :id => nil } do |form|
          = form.check_box :public
          - if !video.public?
            %label.is_public
              Make this video public
          - else
            %label.is_public
              This video is public
    - elsif current_user and current_user.has_role?(  :cataloger )
      %label.is_public
        This video is
        = video.public? ? "public" : "private"

  .body
    /left col start
    .col-left

      - if p = select_flash_path(video)

        %p.miniplayer#flash

        %script{:type => "text/javascript", :src=>"/javascripts/swfobject.js"}
        %script{:type => "text/javascript"}
          var s1 = new SWFObject('/player.swf','player','200','150','9');
          s1.addParam('allowfullscreen','true');
          s1.addParam('allowscriptaccess','always');
          s1.addParam('flashvars',
          = "'file=#{p}&image=#{video.poster_path}'"
          );
          s1.write('flash');

      .details
        .full-screen
          - video.assets.each do |asset|
            %span.left
              %a{:href => asset_path( asset  )}
                %img{ :src => "/images/icon-full-size.gif", :alt => "" }
                Watch Full Size Video
              == (#{h asset.asset_format})

        - if !video.abstract.blank?
          .description
            :textile
              #{video.abstract}
        - elsif !video.sentence.blank?
          .description&= video.sentence
        .download
          - video.assets.each do |asset|
            %a{:href => asset_path( asset  )}
              %img{ :src => "/images/btn-download.gif", :alt => "download"}
            %span
              = h asset.asset_format + " " + number_to_human_size(asset.size)

    /left col end
    .col-center
      %ul.navigators
        %li
          %a{ :href => "#details" }
            Details
        %li
          %a{ :href => "#storyboard" }
            Storyboard
        %li
          %a{ :href => "#fast-forward" }
            Fast Forward
        %li
          %a{ :href => "#excerpt" }
            Excerpt
      %dl#details
        %dt
          Overview
        %dd
          %ul
            - if !video.duration.blank?
              %li
                %label
                  Duration:
                = h int_to_duration( video.duration )
            - if !video.alternative_title.blank?
              %li
                %label
                  Alternative Title:
                = h video.alternative_title
            - if !video.series_title.blank?
              %li
                %label
                  Series Title:
                = h video.series_title
            - if !video.sentence.blank?
              %li
                %label
                  Sentence Summary:
                = h video.sentence
            - if !video.abstract.blank?
              %li
                %label
                  Abstract:
                = h video.abstract
        %dt
          Video Information
        %dd
          %ul
            - if !video.created_at.blank?
              %li
                %label
                  Added:
                = video.created_at.to_date.to_s(:long)
            - if !video.updated_at.blank?
              %li
                %label
                  Last updated:
                = video.updated_at.to_date.to_s(:long)
            - if !video.audience.blank?
              %li
                %label
                  Audience:
                = video.audience
            - if !video.language_note.blank?
              %li
                %label
                  Language Note:
                = video.language_note
        %dt
          Dates
        %dd
          %ul
            -# TODO replace Creation example below with date types and values from db
            %li
              %label
                Creation:
              April 14, 2009
        %dt
          Descriptors
        %dd
          %ul
            -# TODO replace Color example below with Descriptor types and values from db
            %li
              %label
                Color:
              Black &amp; White
        %dt
          Responsible Entities
        %dd
          -# TODO add below  Responsible entity types and values from db
          %ul
            - if !video.creation_credits.blank?
              %li
                %label
                  Creation Credits:
                = video.creation_credits
            - if !video.participation_credits.blank?
              %li
                %label
                  Participation Credits:
                = video.participation_credits
        %dt
          Rights Information
        %dd
          %ul
            %li
              %label
                License:
              - if !video.rights_holder.blank?
                :textile
                  #{video.rights_holder}
              %p
                = h video.rights.statement
              :textile
                #{video.rights.html}

      #storyboard.storyboard
        - if images = video.storyboard
          - images.each_with_index do |image, index|
            %div{:class =>(((index + 1) % 4).zero? ? "image fourth" : "image")}
              %img{:src=>image,:alt=>"storyboard image"}
              - if current_user and current_user.has_role?(  [ :admin, :cataloger ] )
                - if image == video.poster_path
                  .poster.checked
                - else
                  .poster.check
                    - form_for video, :html => { :id => nil } do |f|
                      .hidden
                        = f.text_field :poster_path, :value => image, :id => gen_id
                        = f.submit "update", :id => nil
      #fast-forward
        Fast forward
      #excerpt
        Excerpt
    /center end
    .col-right
      %dl
        %dt
          %img{ :src => "/images/icon-tag.gif", :alt => "tags" }
          TAGS
        %dd
          .tags
            - if current_user and @library.user_tagging_enabled?
              = tags_html( video.tags )
              - form_tag url_for( :controller => :tagging, :action => :create ) do
                = text_field_tag :tags
                = hidden_field_tag :video_id, video.id
                = submit_tag "add tags"
            - if !current_user and @library.user_tagging_enabled?
              = link_to "Login", login_path
              to add tags
        %dt
          %img{ :src => "/images/icon-video.gif", :alt => "more videos" }
          More videos
        %dd
          %ul
            %li
              = link_to "Browse All Videos »", videos_path
            - if session[:search]
              %li
                = link_to "Return to search results »", search_path( session[:search])
        %dt
          %img{ :src => "/images/icon-tool.gif", :alt => "TOOLS &amp; SERVICES" }
          TOOLS &amp; SERVICES
        %dd
          %ul
            %li.menu-print
              %span.icon
              %a{ :href => "#" }
                Print
            %li.menu-email
              %span.icon
              = link_to "E-mail", mail_video( video )
            - if !@library.emails.blank?
              %li.menu-report
                %span.icon
                = link_to "Report Issue", mail_video_issue( video )
            - if current_user
              %li.menu-favorites
                %span.icon
                = render :partial => "videos/alter_favorites", :object => video
              %li.menu-playlists
                %span.icon
                = render :partial => "add_to_playlist", :object => video
            %li.menu-embed
              %span.icon
              %a{ :href => "#" }
                Embed Video
        - if current_user and current_user.has_role?(  [ :admin, :cataloger ] )
          %dt
            %img{ :src => "/images/icon-option.gif", :alt => "CATALOGING OPTIONS" }
            CATALOGING OPTIONS
          %dd
            %ul
              %li.menu-edit
                %span.icon
                = link_to "Edit Video Record", edit_video_path( video )
              %li.menu-delete
                %span.icon
                = link_to( "Delete Video Record", video_path( video ), |
                       :confirm => "Are you sure you want to delete the catalog record for this video? Select OK to delete it, or Cancel to keep it.", |
                       :method => :delete ) |
              %li.menu-create
                %span.icon
                = link_to "Create New Record", new_video_path