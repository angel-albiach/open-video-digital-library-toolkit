.hitlist

  %h1 Search / Browse Results

  .pagination_info
    = page_entries_info @videos

  - if @videos.size > 0
    .navigate

      .view.first
        %div{current(:list)}= link_to_format :list
      .view
        %div{current(:tile)}= link_to_format :tile
      .view
        %div{current(:image)}= link_to_format :image
      .clear

    %div{:class => "videos #{class_from_format page_format}"}
      = render :partial => page_format.to_s, :collection => @videos

      .clear

  .pagination
    = will_paginate @videos

.sidebar
  .entry
    %ul
      %li= link_to "Browse all videos", videos_path
  .entry
    - if @type
      = render :partial => "shared/axis", :object => @type
  .entry
    .title Refine Results
    - form_tag @path.call({}), :method => :get do
      = text_field_tag :query, params[:query], :size => 35, :id => nil
      / = submit_tag "Search"
      - if params[:descriptor_id]
        - descriptor = Descriptor.find( params[:descriptor_id] )
        .search-within
          In
          = h(descriptor.descriptor_type.title)
          &mdash;
          = h(descriptor.text)

    %ul
      %li Genre: select one
  .entry
    .title Tools and Services
    %ul
      - if current_user && current_user.has_role?( [ :admin, :cataloger ] )
        %li= link_to "<span>Add new video</span>", "/videos/new"
      - if current_user and ( params[:descriptor_id] or params[:query] )
        %li
          - form_tag saved_queries_path, :method => :post do
            = hidden_field_tag :descriptor_id, params[:descriptor_id]
            = hidden_field_tag :query, params[:query]
            %label.button
              Save this search
              = submit_tag "Save this search", :class => :hidden

.clear