#home
  .search
    = @library.video_count public_only?
    videos
    .form
      - form_for Search.new, :url => videos_path, :html => { :method => :get, :id => nil } do |form|
        %span.input
          = form.criterion :text, :size => 40, :id => nil
          = image_submit_tag "mag.png"
        = form.submit "Search"
  .divider
    .graphic
  .main
    .left
      .content
        .column_title
          Browse
        .category
          = render :partial => "shared/axes"

    .center
      .content
        - first = true
        - featured_videos.each do |video|
          .video
            .hidden.id= video.id
            %div{:class =>(first ? "first" : "other")}
              - first = false
              .image
                %a{:href => video_path( video.id )}
                  -if poster_path = video.poster_path
                    %img{:src=>poster_path,:alt => "video #{video.id}"}
              .details
                .title{:class=>video_vis_class(video)}
                  = link_to h(video.title), video_path( video )
                - if !(d = video_created( video )).blank?
                  .duration= int_to_duration( video.duration )
                  %span.between
                    |
                  .created
                    &= video_created( video ).to_s(:long)
                - if !video.sentence.blank?
                  .description&= video.sentence
              .clear  

    .right
      .content
        .column_title
          .size
            = link_to "All", collections_collections_path
            == [#{public_collections_count}]
          Collections
        #featured_collections
          - featured_collections.each do |collection|
            %div{ :class => 'collection', :id => "collection_#{collection.id}" }
              .hidden.id= collection.id
              .title
                = link_to h(collection.title), collection_path( collection )
              .videos
                = collection.size(public_only?)
                videos
              .description
                &= collection.description
              .handle
                .handle_image
        %input{ :type => "submit", :class => "save_new_order", :value => "Save new order" }
        .all_collections
          = link_to "View all collections &raquo;", collections_collections_path
    - if current_user and current_user.has_role?( "admin" )
      :javascript
        var original_order;
        var handle_obj;
        function send_new_order() {
          var order = $("#featured_collections").sortable( 'serialize') ;
          alert(" new order is " +  order );
        }
        $(document).ready( function() {
          $("#featured_collections .collection").bind("mouseover", function(e) { $("#featured_collections .handle").hide(); $(this).children(".handle").show()             } );
          $("#content").bind("mouseout", function(e) { $("#content .collection .handle").hide() } );
          $("#featured_collections").sortable({
            axis: 'y',
            cursor: 'move',
            placeholder : "placeholder",
            tolerance: 'pointer',
            handle: '.handle',
            update: function() { 
              var new_order = $("#featured_collections").sortable('serialize') ;
              if (original_order == new_order)
              {
                $(".save_new_order").fadeOut(500);
              } else {
                $(".save_new_order").fadeIn(250);
                $(".save_new_order").effect("highlight", {}, 2000 );
              }
            }
          });
          original_order = $("#featured_collections").sortable('serialize');
          $(".save_new_order").bind("click", send_new_order);
        });

    .clear

