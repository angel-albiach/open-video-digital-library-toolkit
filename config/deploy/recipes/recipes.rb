set :shared_dirs, [ "public/assets", "public/surrogates" ]

after 'deploy:setup', :roles => [ :app, :web ] do

  shared_dirs.each do |dir|
    run "mkdir -p #{shared_path}/#{dir}"
  end
  
  run "mkdir -p #{shared_path}/config/initializers"
  put `erb config/initializers/site_keys.rb.erb`, "#{shared_path}/config/initializers/site_keys.rb.new"
  
  run <<EOS
bash -c 'if [ -e #{shared_path}/config/initializers/site_keys.rb ];
then
 rm #{shared_path}/config/initializers/site_keys.rb.new;
else
 mv #{shared_path}/config/initializers/site_keys.rb.new #{shared_path}/config/initializers/site_keys.rb;
fi'
EOS

end

on :load do
  after 'deploy:update_code', :roles => :app do
    sudo "bash -c '(cd #{release_path} && rake gems:install)'"
  end
end

after 'deploy:symlink', :roles => :app do
  shared_dirs.each do |dir|
    run "ln -nfs #{shared_path}/#{dir} #{release_path}/#{dir}"
  end
  run "ln -nfs #{shared_path}/config/initializers/site_keys.rb #{release_path}/config/initializers/site_keys.rb"
  run "rm -f #{release_path}/public/themes/*/stylesheets/cache/*.css"
end

namespace :sass do

  desc 'Updates the stylesheets generated by SASS'
  task :update, :roles => :app do
    invoke_command "cd #{latest_release}; RAILS_ENV=#{rails_env} rake sass:update"
  end

  # Generate all the stylesheets manually (from their Sass templates) before each restart.
  before 'deploy:restart', 'sass:update'

end

namespace :cache do
  desc 'Updates the ss/js caches'

  task :update, :roles => :app do
    invoke_command "cd #{latest_release}; RAILS_ENV=#{rails_env} rake cached_assets:regenerate"
  end

  after 'sass:update', 'cache:update'
end

namespace :deploy do

  namespace :first_time do
       
    desc "All first time setup tasks"
    task :default, :roles => :db do
      deploy.migrations
      fixtures
      populate    
    end

    desc "Sets up library with sample data that can then be changed"
    task :fixtures, :roles => :db do
      run "cd #{current_path} && env RAILS_ENV=#{rails_env} rake spec:db:fixtures:load"
    end

    desc "Adds dummy data to the library"
    task :populate, :roles => :db do
      run "cd #{current_path} && env RAILS_ENV=#{rails_env} rake db:populate"
    end

  end

end

