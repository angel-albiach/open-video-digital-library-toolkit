- video ||= @video
.details

  %h1.title= h video.title

  .body

    .image

      - if p = select_flash_path(video)

        %p#flash

        %script{:type => "text/javascript", :src=>"/javascripts/swfobject.js"}
        %script{:type => "text/javascript"}
          var s1 = new SWFObject('/player.swf','player','200','150','9');
          s1.addParam('allowfullscreen','true');
          s1.addParam('allowscriptaccess','always');
          s1.addParam('flashvars',
          = "'file=#{p}&image=#{video.poster_path}'"
          );
          s1.write('flash');
        
    .sentence= h video.sentence

    .navigate

      .view.first
        %div{current(:details)}= link_to_details :details
      .view
        %div{current(:fast_forward)}= link_to_details :fast_forward
      .view
        %div{current(:excerpt)}= link_to_details :excerpt
      .view.last
        %div{current(:storyboard)}= link_to_details :storyboard

      .clear

    - if params[:details_format] == "storyboard" and |
         images = video.storyboard |
      .storyboard
        
        - pp images

        - images.each do |image|
          .image
            %img{:src=>image,:alt=>"storyboard image"}

      .clear

    .downloads

      .legend Download

      .download_list

        - video.assets.each do |asset|
        
          .download

            %a{:href => asset_path( asset  )}
              = asset.filename
            &diams;
            .format= h asset.asset_format
            &loz;
            .size= number_to_human_size(asset.size)

      .clear

    .details

      .legend Video Details

      .details_list

        - video.descriptor_types.each do |type|

          .detail
            - descriptors = video.descriptors_by_type( type )
            .type= h ( descriptors.size > 1 ? type.title.pluralize : |
                                               type.title ) + ":" |
            - descriptors.each do |descriptor|
              .value= h descriptor.text
            .clear

      .details_list

        %div= h video.rights_holder
        %div= h video.rights.statement
        %div= video.rights.html

    .clear

.sidebar
  .entry
    .title Related Videos
    %ul
      %li Something here
  .entry
    .title Tools and Services
    %ul
      - if current_user
        %li= render :partial => "alter_favorites", :object => video
      - if current_user and current_user.has_role?(  [ :admin, :cataloger ] )
        %li= link_to "Add new video", new_video_path
        %li= link_to "Edit catalog data", edit_video_path( video )
        %li= link_to( "Delete catalog data", video_path( video ), |
                       :confirm => "Are you sure you want to delete/uncatalog this video? Select OK to delete it, or Cancel to keep it.", |
                       :method => :delete ) |
                      
      %li Save this video to a playlist
      %li Print this page
      %li E-mail this video page

.clear